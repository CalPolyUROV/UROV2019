controller.py: 95:	 # TODO: Investigate whether this part of the loop is necessary
controller.py: 154:	 # TODO: provide specific data types for relevent keys
robot_data.py: 12:	 Senors TODO:
robot_data.py: 20:	 Inputs TODO:
robot_data.py: 67:	 # TODO: Create task for different control inputs
robot_data.py: 80:	 # TODO: Store thrttle values as a dict to avoid confusion
serial_coms.py: 3:	TODO: Add more documentation here
serial_coms.py: 24:	# TODO: Move list to external file (maybe .txt or .csv),
serial_coms.py: 67:	 # TODO: Handle aborting program in Schedule in order to correctly terminate connections, etc.
serial_coms.py: 169:	 # TODO: Add logic to retry this a few times
serial_finder.py: 3:	# TODO: Find the origin of this code and give credit
serial_packet.py: 6:	# TODO: verify checksums, probably in read_packet()
serial_packet.py: 74:	 # TODO: Make this better, but it must match on this and the Arduino/Teensy. (Maybe CRC32 or a smaller variant)
settings.py: 5:	# TODO: Investigate converting settings values to a dict
settings.py: 10:	# TODO: track debugging for server and client separately
settings.py: 62:	USE_CONTROLLER = True # TODO: Use this value
settings.py: 63:	REQUIRE_CONTROLLER = True # TODO: Use this value
settings.py: 64:	SIMULATE_INPUT = False # TODO: Use this value
snr.py: 199:	 # TODO: intelligently insert normal priority tasks after any high priority tasks, but before low priority tasks
snr.py: 215:	 # TODO: Send commands to Teensy (In final commands will come from sockets connection OR event loop will get updated values in an RTOS manner)
snr.py: 216:	 # TODO: Write logic choosing a command to send (maybe use a queue)
snr.py: 240:	 # TODO: possibly call get_new_tasks()
sockets_client.py: 59:	 # TODO: Handle aborting program in Schedule in order to correctly terminate connections, etc.
sockets_client.py: 96:	 # TODO: Handle loss of connection, attempt to recover
sockets_client.py: 111:	 # TODO: Correctly terminate this function here
sockets_server.py: 17:	 TODO: verify this threading behavior
sockets_server.py: 50:	 # TODO: Investigate this magic int
topside.py: 21:	 # TODO: implement SNR schedule/Node in topside
topside.py: 24:	 # TODO: pass sockets server into Node/Schedule
topside.py: 26:	 # TODO: Remotely run client on robot
topside.py: 71:	 # TODO: Record and display telemetry data
topside.py: 86:	 # TODO: Take IP address and port as command line arg
utils.py: 20:	 # TODO: prevent use of this via a setting
utils.py: 72:	 # TODO: Use settings.ROLE for per client and server debugging
utils.py: 83:	 # TODO: Output stuff to a log file
utils.py: 87:	 # TODO: Add logging to a specific file
utils.py: 113:	 # TODO: Account for different kinds of input data such as joysticks vs buttons
utils.py: 124:	 # TODO: Investigate changing this behavior
